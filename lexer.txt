CONSTTK const
INTTK int
IDENFR year
ASSIGN =
INTCON 2024
COMMA ,
IDENFR month
ASSIGN =
INTCON 9
SEMICN ;
INTTK int
IDENFR day
SEMICN ;
INTTK int
IDENFR getDay
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR day
SEMICN ;
IDENFR day
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
RETURNTK return
IDENFR day
SEMICN ;
RBRACE }
VOIDTK void
IDENFR putString
LPARENT (
CHARTK char
IDENFR s
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR length
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
FORTK for
LPARENT (
SEMICN ;
IDENFR i
LSS <
IDENFR length
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%c"
COMMA ,
IDENFR s
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR strlen
LPARENT (
CHARTK char
IDENFR s
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
FORTK for
LPARENT (
SEMICN ;
IDENFR s
LBRACK [
IDENFR i
RBRACK ]
NEQ !=
CHRCON '\0'
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
SEMICN ;
RETURNTK return
IDENFR i
SEMICN ;
RBRACE }
CHARTK char
IDENFR charAt
LPARENT (
CHARTK char
IDENFR s
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR index
RPARENT )
LBRACE {
RETURNTK return
IDENFR s
LBRACK [
IDENFR index
RBRACK ]
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR day
ASSIGN =
IDENFR getDay
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Tody is %d-%d-%d\n"
COMMA ,
IDENFR year
COMMA ,
IDENFR month
COMMA ,
IDENFR day
RPARENT )
SEMICN ;
CHARTK char
IDENFR s
LBRACK [
INTCON 12
RBRACK ]
ASSIGN =
STRCON "hello world"
SEMICN ;
LBRACE {
INTTK int
IDENFR length
ASSIGN =
IDENFR strlen
LPARENT (
IDENFR s
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR length
GRE >
INTCON 4
RPARENT )
LBRACE {
CHARTK char
IDENFR tmp
ASSIGN =
IDENFR charAt
LPARENT (
IDENFR s
COMMA ,
INTCON 4
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
